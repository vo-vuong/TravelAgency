@model TravelAgency.Models.SignupModel

@{
    ViewBag.Title = "Trang chủ";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<div class="container">
    <div class="row" style="padding-top: 15px;">
        <div class="col-xs-12 col-sm-4"></div>
        <div class="col-xs-12 col-sm-4">
            @using (Html.BeginForm("Index", "Signup", FormMethod.Post, new { @class = "login" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Họ tên</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.TextBoxFor(model => model.name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Tên đăng nhập</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.TextBoxFor(model => model.userName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Mật khẩu</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.PasswordFor(model => model.passWord, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.passWord, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Nhập lại mật khẩu</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.PasswordFor(model => model.confirmPassWord, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.confirmPassWord, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Email</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.TextBoxFor(model => model.email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Số điện thoại</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.TextBoxFor(model => model.phoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Ngày tháng năm sinh</label>&nbsp;
                            <div class="glyphicon glyphicon-asterisk" style="font-size: 0.8em;"></div>
                            @Html.TextBoxFor(model => model.birthDay, new { @type = "date" })
                            @Html.ValidationMessageFor(model => model.birthDay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <label>Nam</label>&nbsp;
                            @Html.RadioButton("gender", "True", true, new { @class = "radio" })
                            <label>Nữ</label>&nbsp;
                            @Html.RadioButton("gender", "False", new { @class = "radio" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-10">
                        <div class="form-group">
                            <input type="submit" name="submit" class="btn" style="background-color: #0071BC;color: #FFFFFF;float: right;width: 100%;" value="Đăng ký">
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section jsFooter{
    <script>
        $(document).ready(function () {
            $('.login').validate({
                rules: {
                    name: {
                        required: true,
                        minlength: 8,
                        maxlength: 255
                    },
                    calendar: {
                        required: true
                    },
                    email: {
                        required: true,
                        minlength: 8,
                        maxlength: 255,
                        email: true
                    },
                    pass: {
                        required: true,
                        minlength: 8,
                        maxlength: 255
                    },
                },
                messages: {
                    name: {
                        required: "Không được để trống",
                        minlength: "Không được nhỏ hơn 8 kí tự",
                        maxlength: "Không được lớn hơn 255 kí tự"
                    },
                    calendar: {
                        required: "Không được để trống"
                    },
                    email: {
                        required: "Không được để trống",
                        minlength: "Không được nhỏ hơn 8 kí tự",
                        maxlength: "Không được lớn hơn 255 kí tự",
                        email: "Email phải đúng định dạng"
                    },
                    pass: {
                        required: "Không được để trống",
                        minlength: "Không được nhỏ hơn 8 kí tự",
                        maxlength: "Không được lớn hơn 255 kí tự",
                    }
                }
            });
        });
        $(function () {
            $("#datepicker").datepicker({
                autoclose: true,
                todayHighlight: true
            }).datepicker('update', new Date());
        });
    </script>
}